<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0062)http://www.binarytides.com/python-socket-programming-tutorial/ -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML 
lang="en-US" xmlns="http://www.w3.org/1999/xhtml"><HEAD profile="http://gmpg.org/xfn/11"><META 
content="IE=10.000" http-equiv="X-UA-Compatible">
 
<META http-equiv="Content-Type" content="text/html; charset=UTF-8"> 
<TITLE>Python socket programming tutorial | Binary Tides</TITLE> <LINK href="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/style.css" 
rel="stylesheet" type="text/css" media="all"> <LINK href="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/ddsmoothmenu.css" 
rel="stylesheet" type="text/css"> <LINK href="https://plus.google.com/117145272367995638274/posts" 
rel="author"> <LINK href="http://www.binarytides.com/blog/xmlrpc.php" rel="pingback">
		 <LINK title="March 2013" href="http://www.binarytides.com/2013/03/" rel="archives">
	 <LINK title="December 2012" href="http://www.binarytides.com/2012/12/" rel="archives">
	 <LINK title="November 2012" href="http://www.binarytides.com/2012/11/" rel="archives">
	 <LINK title="October 2012" href="http://www.binarytides.com/2012/10/" rel="archives">
	 <LINK title="September 2012" href="http://www.binarytides.com/2012/09/" rel="archives">
	 <LINK title="August 2012" href="http://www.binarytides.com/2012/08/" rel="archives">
	 <LINK title="July 2012" href="http://www.binarytides.com/2012/07/" rel="archives">
	 <LINK title="June 2012" href="http://www.binarytides.com/2012/06/" rel="archives">
	 <LINK title="May 2012" href="http://www.binarytides.com/2012/05/" rel="archives">
	 <LINK title="March 2012" href="http://www.binarytides.com/2012/03/" rel="archives">
	 <LINK title="February 2012" href="http://www.binarytides.com/2012/02/" rel="archives">
	 <LINK title="December 2011" href="http://www.binarytides.com/2011/12/" rel="archives">
	 <LINK title="November 2011" href="http://www.binarytides.com/2011/11/" rel="archives">
	 <LINK title="October 2011" href="http://www.binarytides.com/2011/10/" rel="archives">
	 <LINK title="May 2011" href="http://www.binarytides.com/2011/05/" rel="archives">
	 <LINK title="October 2010" href="http://www.binarytides.com/2010/10/" rel="archives">
	 <LINK title="June 2010" href="http://www.binarytides.com/2010/06/" rel="archives">
	 <LINK title="April 2010" href="http://www.binarytides.com/2010/04/" rel="archives">
	 <LINK title="March 2010" href="http://www.binarytides.com/2010/03/" rel="archives">
	 <LINK title="October 2009" href="http://www.binarytides.com/2009/10/" rel="archives">
	 <LINK title="July 2009" href="http://www.binarytides.com/2009/07/" rel="archives">
	 <LINK title="May 2009" href="http://www.binarytides.com/2009/05/" rel="archives">
	 <LINK title="April 2009" href="http://www.binarytides.com/2009/04/" rel="archives">
	 <LINK title="January 2009" href="http://www.binarytides.com/2009/01/" rel="archives">
	 <LINK title="November 2008" href="http://www.binarytides.com/2008/11/" rel="archives">
	 <LINK title="January 2008" href="http://www.binarytides.com/2008/01/" rel="archives">
	 <LINK title="August 2007" href="http://www.binarytides.com/2007/08/" rel="archives">
	 <LINK title="March 2007" href="http://www.binarytides.com/2007/03/" rel="archives">
		 <LINK title="Binary Tides » Python socket programming tutorial Comments Feed" 
href="http://www.binarytides.com/python-socket-programming-tutorial/feed/" rel="alternate" 
type="application/rss+xml"> 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/jquery.min.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/jquery.lazyload.mini.js" type="text/javascript"></SCRIPT>
 <LINK title="RSD" href="http://www.binarytides.com/blog/xmlrpc.php?rsd" rel="EditURI" 
type="application/rsd+xml"> <LINK href="http://www.binarytides.com/blog/wp-includes/wlwmanifest.xml" 
rel="wlwmanifest" type="application/wlwmanifest+xml"> <LINK title="PHP Socket programming tutorial" 
href="http://www.binarytides.com/php-socket-programming-tutorial/" rel="prev"> 
<LINK title="Java socket programming tutorial" href="http://www.binarytides.com/java-socket-programming-tutorial/" 
rel="next"> 
<META name="GENERATOR" content="MSHTML 10.00.9200.16494"> <LINK href="http://www.binarytides.com/?p=2204" 
rel="shortlink"> <!-- All in One SEO Pack 1.6.15.3 by Michael Torbert of Semper Fi Web Design[299,362] --> 
<META name="description" content="What is this about This is a quick guide/tutorial to learning socket programming in python. Socket programming python is very similar to C. To summarise"> 
<META name="keywords" content="network programming,python,python sockets,socket programming"> 
<LINK href="http://www.binarytides.com/python-socket-programming-tutorial/" rel="canonical"> <!-- /all in one seo pack --> 
<SCRIPT type="text/javascript">
jQuery(document).ready(function($){
  if (navigator.platform == "iPad") return;
  jQuery("img").not(".cycle img").lazyload({
    effect:"fadeIn",
    placeholder: "http://www.binarytides.com/blog/wp-content/plugins/jquery-image-lazy-loading/images/grey.gif"
  });
});
</SCRIPT>

<META name="syntaxhighlighter-version" id="syntaxhighlighteranchor" content="3.1.5"> 
<LINK href="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/css.css" 
rel="stylesheet" type="text/css"> </HEAD> 
<BODY><!-- Begin #wrapper --> 
<DIV id="wrapper"><!-- Begin #header -->	 
<DIV id="header">
<DIV id="header2">
<DIV id="logo"><A href="http://www.binarytides.com/">BinaryTides</A></DIV><!-- Begin #topMenu -->
					 
<DIV class="ddsmoothmenu" id="topMenu">
<UL>
  <LI class="cat-item cat-item-90"><A title="View all posts filed under General" 
  href="http://www.binarytides.com/category/general/">General</A>
  <UL class="children">
    <LI class="cat-item cat-item-384"><A title="Adsense tips and tricks" href="http://www.binarytides.com/category/general/blogging-adsense/">Blogging 
    + Adsense</A></LI>
    <LI class="cat-item cat-item-484"><A title="Programming box2d in javascript" 
    href="http://www.binarytides.com/category/general/box2d-game-programming-2/">Box2d</A></LI>
    <LI class="cat-item cat-item-422"><A title="View all posts filed under Bsnl" 
    href="http://www.binarytides.com/category/general/bsnl-general/">Bsnl</A></LI>
    <LI class="cat-item cat-item-361"><A title="Freelancing tips" href="http://www.binarytides.com/category/general/freelancing-general/">Freelancing</A></LI>
    <LI class="cat-item cat-item-306"><A title="Php tutorials" href="http://www.binarytides.com/category/general/php-2/">PHP</A>
    <UL class="children">
      <LI class="cat-item cat-item-322"><A title="Php web development tutorials" 
      href="http://www.binarytides.com/category/general/php-2/tutorial/">Tutorial</A></LI></UL></LI>
    <LI class="cat-item cat-item-307"><A title="Ubuntu tips and tricks" href="http://www.binarytides.com/category/general/ubuntu-2/">Ubuntu</A>
    <UL class="children">
      <LI class="cat-item cat-item-424"><A title="View all posts filed under Install How to" 
      href="http://www.binarytides.com/category/general/ubuntu-2/install-how-to/">Install 
      How to</A></LI></UL></LI></UL></LI>	 
  <LI class="cat-item cat-item-10"><A title="Hacking and network security tutorials" 
  href="http://www.binarytides.com/category/hacking-2/">Hacking</A></LI>	 
  <LI class="cat-item cat-item-69"><A title="Networking" href="http://www.binarytides.com/category/networking-2/">Networking</A></LI>
	 
  <LI class="cat-item cat-item-5"><A title="Socket programming tutorials in C, Python, Perl, Php, Java and Winsock" 
  href="http://www.binarytides.com/category/sockets/">Socket Programming</A>
  <UL class="children">
    <LI class="cat-item cat-item-316"><A title="Socket Programming in C" href="http://www.binarytides.com/category/sockets/c-sockets/">C</A></LI>
    <LI class="cat-item cat-item-318"><A title="Socket Programming in Java" 
    href="http://www.binarytides.com/category/sockets/java-sockets-sockets/">Java</A></LI>
    <LI class="cat-item cat-item-368"><A title="Socket programming in perl" 
    href="http://www.binarytides.com/category/sockets/perl/">Perl</A></LI>
    <LI class="cat-item cat-item-319"><A title="Socket programming in php" href="http://www.binarytides.com/category/sockets/php-sockets-sockets/">PHP</A></LI>
    <LI class="cat-item cat-item-317"><A title="Socket Programming in Python" 
    href="http://www.binarytides.com/category/sockets/python-sockets-sockets/">Python</A></LI>
    <LI class="cat-item cat-item-320"><A title="Socket programming with winsock" 
    href="http://www.binarytides.com/category/sockets/winsock-sockets/">Winsock</A></LI></UL></LI>
  				 </UL></DIV><!-- End #topMenu -->		 <!-- Begin #topMenuRight -->			 
<DIV id="topMenuRight"></DIV><!-- End #topMenuRight -->	 </DIV></DIV><!-- End #header -->
		 <!-- Begin #content -->	 
<DIV class="clearfix" id="content"><!-- Begin #colLeft -->		 
<DIV id="colLeft"><!-- Begin .postBox -->		 
<DIV class="postBox">
<DIV class="postBoxMid">
<DIV class="postBoxMidInner first clearfix">
<DIV class="category">
<DIV class="breadcrumb"><A href="http://www.binarytides.com/">Home</A><SPAN 
class="delimiter"> // </SPAN><A title="View all posts in Socket Programming" 
href="http://www.binarytides.com/category/sockets/">Socket Programming</A> <SPAN 
class="delimiter"> // </SPAN> <A title="View all posts in Python" href="http://www.binarytides.com/category/sockets/python-sockets-sockets/">Python</A> 
<SPAN class="delimiter"> // </SPAN>  Python socket programming 
tutorial</DIV></DIV><!-- google_ad_section_start -->				 
<H1>Python socket programming tutorial</H1><!-- google_ad_section_end -->				
<DIV class="postMetaSingle"><!-- author and date -->	 <SPAN>By</SPAN> 	<SPAN 
style="color: rgb(21, 92, 142); font-weight: bold;">Silver Moon</SPAN> 	<SPAN 
style="margin-left: 15px;">On</SPAN> 	<SPAN style="color: rgb(21, 92, 142); font-weight: bold;">Jul 
22, 2012</SPAN>		 <!-- comments link -->	 <SPAN style="margin-left: 20px;"><A 
title="Comment on Python socket programming tutorial" href="http://www.binarytides.com/python-socket-programming-tutorial/#comments"><SPAN 
class="dsq-postid" rel="2204 http://www.binarytides.com/blog/?p=2204">15 
Comments</SPAN></A>	</SPAN>		 <!-- social links -->	 
<DIV style="width: 330px; margin-right: 100px; float: right; display: inline-block;">
<DIV style="width: 100px; float: left; display: inline-block;">
<DIV class="fb-like" data-show-faces="false" data-width="450" data-layout="button_count" 
data-send="false"></DIV></DIV>
<DIV style="display: inline-block;">
<DIV class="g-plusone" data-size="medium"></DIV></DIV>
<DIV style="display: inline-block;"><A class="twitter-share-button" href="https://twitter.com/share" 
data-lang="en">Tweet</A>	 </DIV></DIV></DIV><!-- google_ad_section_start --> 
<H3>What is this about</H3>
<P>This is a quick guide/tutorial to learning socket programming in python. 
Socket programming python is very similar to C. 
<DIV style="margin: 0px 15px 10px 0px; float: left;">
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-5814774904969415";
/* binarytides top large rectangle */
google_ad_slot = "0700059493";
google_ad_width = 336;
google_ad_height = 280;
//-->
</SCRIPT>
<BR>
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/show_ads.js" type="text/javascript"></SCRIPT>
 </DIV>
<P><!-- Time : 0.000221967697144 --></P>
<P>To summarise the basics, sockets are the fundamental "things" behind any kind 
of network communications done by your computer. For example when you type 
www.google.com in your web browser, it opens a socket and connects to google.com 
to fetch the page and show it to you. Same with any chat client like gtalk or 
skype. Any network communication goes through a socket.</P>
<P>In this tutorial we shall be programming tcp sockets in python. You can also 
<A href="http://www.binarytides.com/programming-udp-sockets-in-python/">program 
udp sockets in python</A>.</P>
<H3>Before you begin</H3>
<P>This tutorial assumes that you already have a basic knowledge of python.</P>
<P>So lets begin with sockets.</P>
<H3>Creating a socket</H3>
<P>This first thing to do is create a socket. The <CODE>socket.socket</CODE> 
function does this.<BR>Quick Example :</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">#Socket client example in python

import socket	#for sockets

#create an AF_INET, STREAM socket (TCP)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

print 'Socket Created'
</PRE>
<P>Function <CODE>socket.socket</CODE> creates a socket and returns a socket 
descriptor which can be used in other socket related functions</P>
<P>The above code will create a socket with the following properties ...</P>
<P>Address Family : AF_INET (this is IP version 4 or IPv4)<BR>Type : SOCK_STREAM 
(this means connection oriented TCP protocol)</P>
<P><B>Error handling</B></P>
<P>If any of the socket functions fail then python throws an exception called 
socket.error which must be caught.</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">#handling errors in python socket programs

import socket	#for sockets
import sys	#for exit

try:
	#create an AF_INET, STREAM socket (TCP)
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
except socket.error, msg:
	print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
	sys.exit();

print 'Socket Created'
</PRE>
<P>Ok , so you have created a socket successfully. But what next ? Next we shall 
try to connect to some server using this socket. We can connect to 
www.google.com</P>
<P><B>Note</B></P>
<P>Apart from SOCK_STREAM type of sockets there is another type called 
SOCK_DGRAM which indicates the UDP protocol. This type of socket is 
non-connection socket. In this tutorial we shall stick to SOCK_STREAM or TCP 
sockets.</P>
<H3>Connect to a Server</H3>
<P>We connect to a remote server on a certain port number. So we need 2 things , 
IP address and port number to connect to. So you need to know the IP address of 
the remote server you are connecting to. Here we used the ip address of 
google.com as a sample. 
<DIV style="margin: 10px;">
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-5814774904969415";
/* binarytides.com top horizontal */
google_ad_slot = "7125586293";
google_ad_width = 728;
google_ad_height = 90;
//-->
</SCRIPT>
<BR>
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/show_ads.js" type="text/javascript"></SCRIPT>
 </DIV>
<P><!-- Time : 0.000985860824585 --></P>
<P><B>First get the IP address of the remote host/url</B></P>
<P>Before connecting to a remote host, its ip address is needed. In python the 
getting the ip address is quite simple.</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">
import socket	#for sockets
import sys	#for exit

try:
	#create an AF_INET, STREAM socket (TCP)
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
except socket.error, msg:
	print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
	sys.exit();

print 'Socket Created'

host = 'www.google.com'

try:
	remote_ip = socket.gethostbyname( host )

except socket.gaierror:
	#could not resolve
	print 'Hostname could not be resolved. Exiting'
	sys.exit()
	
print 'Ip address of ' + host + ' is ' + remote_ip

</PRE>
<P>Now that we have the ip address of the remote host/system, we can connect to 
ip on a certain 'port' using the connect function.</P>
<P>Quick example</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">
import socket	#for sockets
import sys	#for exit

try:
	#create an AF_INET, STREAM socket (TCP)
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
except socket.error, msg:
	print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
	sys.exit();

print 'Socket Created'

host = 'www.google.com'
port = 80

try:
	remote_ip = socket.gethostbyname( host )

except socket.gaierror:
	#could not resolve
	print 'Hostname could not be resolved. Exiting'
	sys.exit()
	
print 'Ip address of ' + host + ' is ' + remote_ip

#Connect to remote server
s.connect((remote_ip , port))

print 'Socket Connected to ' + host + ' on ip ' + remote_ip

</PRE>
<P>Run the program</P>
<PRE class="terminal"><!--googleoff: index-->$ python client.py
Socket Created
Ip address of www.google.com is 74.125.236.83
Socket Connected to www.google.com on ip 74.125.236.83<!--googleon: index--></PRE>
<P>It creates a socket and then connects. Try connecting to a port different 
from port 80 and you should not be able to connect which indicates that the port 
is not open for connection. This logic can be used to build a port scanner.</P>
<P>OK, so we are now connected. Lets do the next thing , sending some data to 
the remote server.</P>
<P><B>Free Tip</B></P>
<P>The concept of "connections" apply to SOCK_STREAM/TCP type of sockets. 
Connection means a reliable "stream" of data such that there can be multiple 
such streams each having communication of its own. Think of this as a pipe which 
is not interfered by data from other pipes. Another important property of stream 
connections is that packets  have an "order" or "sequence".</P>
<P>Other sockets like UDP , ICMP , ARP dont have a concept of "connection". 
These are non-connection based communication. Which means you keep sending or 
receiving packets from anybody and everybody.</P>
<H3>Sending Data</H3>
<P>Function <CODE>sendall</CODE> will simply send data.<BR>Lets send some data 
to google.com</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">
import socket	#for sockets
import sys	#for exit

try:
	#create an AF_INET, STREAM socket (TCP)
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
except socket.error, msg:
	print 'Failed to create socket. Error code: ' + str(msg[0]) + ' , Error message : ' + msg[1]
	sys.exit();

print 'Socket Created'

host = 'www.google.com'
port = 80

try:
	remote_ip = socket.gethostbyname( host )

except socket.gaierror:
	#could not resolve
	print 'Hostname could not be resolved. Exiting'
	sys.exit()
	
print 'Ip address of ' + host + ' is ' + remote_ip

#Connect to remote server
s.connect((remote_ip , port))

print 'Socket Connected to ' + host + ' on ip ' + remote_ip

#Send some data to remote server
message = "GET / HTTP/1.1\r\n\r\n"

try :
	#Set the whole string
	s.sendall(message)
except socket.error:
	#Send failed
	print 'Send failed'
	sys.exit()

print 'Message send successfully'
</PRE>
<P>In the above example , we first connect to an ip address and then send the 
string message "GET / HTTP/1.1\r\n\r\n" to it. The message is actually an "http 
command" to fetch the mainpage of a website.</P>
<P>Now that we have send some data , its time to receive a reply from the 
server. So lets do it.</P>
<H3>Receiving Data</H3>
<P>Function <CODE>recv</CODE> is used to receive data on a socket. In the 
following example we shall send the same message as the last example and receive 
a reply from the server.</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">#Socket client example in python

import socket	#for sockets
import sys	#for exit

#create an INET, STREAMing socket
try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
except socket.error:
	print 'Failed to create socket'
	sys.exit()
	
print 'Socket Created'

host = 'www.google.com';
port = 80;

try:
	remote_ip = socket.gethostbyname( host )

except socket.gaierror:
	#could not resolve
	print 'Hostname could not be resolved. Exiting'
	sys.exit()

#Connect to remote server
s.connect((remote_ip , port))

print 'Socket Connected to ' + host + ' on ip ' + remote_ip

#Send some data to remote server
message = "GET / HTTP/1.1\r\n\r\n"

try :
	#Set the whole string
	s.sendall(message)
except socket.error:
	#Send failed
	print 'Send failed'
	sys.exit()

print 'Message send successfully'

#Now receive data
reply = s.recv(4096)

print reply
</PRE>
<P>Here is the output of the above code :</P>
<PRE class="terminal"><!--googleoff: index-->$ python client.py
Socket Created
Ip address of www.google.com is 74.125.236.81
Socket Connected to www.google.com on ip 74.125.236.81
Message send successfully
HTTP/1.1 302 Found
Location: http://www.google.co.in/
Cache-Control: private
Content-Type: text/html; charset=UTF-8
Set-Cookie: expires=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=www.google.com
Set-Cookie: path=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=www.google.com
Set-Cookie: domain=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=www.google.com
Set-Cookie: expires=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.www.google.com
Set-Cookie: path=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.www.google.com
Set-Cookie: domain=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.www.google.com
Set-Cookie: expires=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=google.com
Set-Cookie: path=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=google.com
Set-Cookie: domain=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=google.com
Set-Cookie: expires=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.google.com
Set-Cookie: path=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.google.com
Set-Cookie: domain=; expires=Mon, 01-Jan-1990 00:00:00 GMT; path=/; domain=.google.com
Set-Cookie: PREF=ID=51f26964398d27b0:FF=0:TM=1343026094:LM=1343026094:S=pa0PqX9FCPvyhBHJ; expires=Wed, 23-Jul-2014 06:48:14 GMT; path=/; domain=.google.com<!--googleon: index--></PRE>
<P>Google.com replied with the content of the page we requested. Quite 
simple!<BR>Now that we have received our reply, its time to close the 
socket.</P>
<H3>Close socket</H3>
<P>Function <CODE>close</CODE> is used to close the socket.</P>
<PRE title="Code" class="brush: python; title: Code; notranslate">s.close()
</PRE>
<P>Thats it.</P>
<H3>Lets Revise</H3>
<P>So in the above example we learned how to :<BR>1. Create a socket<BR>2. 
Connect to remote server<BR>3. Send some data<BR>4. Receive a reply</P>
<P>Its useful to know that your web browser also does the same thing when you 
open www.google.com<BR>This kind of socket activity represents a <B>CLIENT</B>. 
A client is a system that connects to a remote system to fetch data.</P>
<P>The other kind of socket activity is called a <STRONG>SERVER</STRONG>. A 
server is a system that uses sockets to receive incoming connections and provide 
them with data. It is just the opposite of Client. So www.google.com is a server 
and your web browser is a client. Or more technically www.google.com is a HTTP 
Server and your web browser is an HTTP client.</P>
<P>Now its time to do some server tasks using sockets.</P>
<DIV class="updated_on">Last Updated On : 14th December 2012</DIV>
<DIV class="pagelink">
<P>Pages: Page 1 <A href="http://www.binarytides.com/python-socket-programming-tutorial/2/">Page 
2</A></P></DIV>
<DIV style="margin: 10px 0px 0px;"><!-- a google ad was here --> 
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-5814774904969415";
/* binarytides.com 336x280 post bottom */
google_ad_slot = "0164188552";
google_ad_width = 336;
google_ad_height = 280;
//-->
</SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/show_ads.js" type="text/javascript"></SCRIPT>
 </DIV>
<DIV class="postTags"><A href="http://www.binarytides.com/tag/network-programming/" 
rel="tag">network programming</A><A href="http://www.binarytides.com/tag/python/" 
rel="tag">python</A><A href="http://www.binarytides.com/tag/python-sockets/" 
rel="tag">python sockets</A><A href="http://www.binarytides.com/tag/socket-programming/" 
rel="tag">socket programming</A></DIV><!-- google_ad_section_end -->				 </DIV>
<DIV class="postCredentials"><!-- Related Posts-->							 
<H2>Related Posts</H2>
<UL class="relatedPosts">
  <LI><A title="Permanent Link to Python program to fetch domain whois data using sockets" 
  href="http://www.binarytides.com/python-program-to-fetch-domain-whois-data-using-sockets/" 
  rel="bookmark">Python program to fetch domain whois data using 
sockets</A></LI>
  <LI><A title="Permanent Link to Programming udp sockets in python" href="http://www.binarytides.com/programming-udp-sockets-in-python/" 
  rel="bookmark">Programming udp sockets in python</A></LI>
  <LI style="clear: left;"><A title="Permanent Link to Raw socket programming in python (Linux)" 
  href="http://www.binarytides.com/raw-socket-programming-in-python-linux/" rel="bookmark">Raw 
  socket programming in python (Linux)</A></LI>
  <LI><A title="Permanent Link to Syn flood program in python using raw sockets (Linux)" 
  href="http://www.binarytides.com/python-syn-flood-program-raw-sockets-linux/" 
  rel="bookmark">Syn flood program in python using raw sockets 
(Linux)</A></LI></UL><!-- end Related Posts-->							 
<DIV id="authorDetails"><IMG width="64" height="64" class="avatar avatar-64 photo" 
alt="" src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/e23f2767e6907e798da5b28694a2bf28.jpg">						
<H4>About the Author: <A href="http://www.binarytides.com/about/">						Silver 
Moon</A></H4>
<P>Php developer, blogger and Linux enthusiast.  He can be reached at 
m00n.silv3r[at]gmail[dot]com<BR>Click <A href="http://www.binarytides.com/about/" 
rel="author">here</A> to know more. </P></DIV></DIV>
<DIV class="postBoxMidInner" id="comments">
<DIV id="disqus_thread">
<DIV id="dsq-content">
<UL id="dsq-comments">
  <LI class="comment even thread-even depth-1" id="dsq-comment-59961">
  <DIV class="dsq-comment-header" id="dsq-comment-header-59961"><CITE id="dsq-cite-59961">
  http://czaroentoro.wordpress.com                <SPAN id="dsq-author-user-59961">Caisar 
  Oentoro</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-59961">
  <DIV class="dsq-comment-message" id="dsq-comment-message-59961">
  <P>Thank’s for the tutorial. Easy to learn</P></DIV></DIV></LI>
  <LI class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-59322">
  <DIV class="dsq-comment-header" id="dsq-comment-header-59322"><CITE id="dsq-cite-59322"><SPAN 
  id="dsq-author-user-59322">lukaz</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-59322">
  <DIV class="dsq-comment-message" id="dsq-comment-message-59322">
  <P>Thank you brave Silver Moon. Thanks to your open post the Python Language 
  got another dimension to me. Have a great time. Bye</P></DIV></DIV></LI>
  <LI class="comment even thread-even depth-1" id="dsq-comment-57691">
  <DIV class="dsq-comment-header" id="dsq-comment-header-57691"><CITE id="dsq-cite-57691"><SPAN 
  id="dsq-author-user-57691">Sherry</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-57691">
  <DIV class="dsq-comment-message" id="dsq-comment-message-57691">
  <P>Great post. Thanks so much, it works well!</P></DIV></DIV></LI>
  <LI class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-57090">
  <DIV class="dsq-comment-header" id="dsq-comment-header-57090"><CITE id="dsq-cite-57090"><SPAN 
  id="dsq-author-user-57090">John</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-57090">
  <DIV class="dsq-comment-message" id="dsq-comment-message-57090">
  <P>This is a very well explained tutorial, containing much that you often 
  don’t get by reading documentation. Many thanks.</P></DIV></DIV></LI>
  <LI class="comment even thread-even depth-1" id="dsq-comment-56902">
  <DIV class="dsq-comment-header" id="dsq-comment-header-56902"><CITE id="dsq-cite-56902"><SPAN 
  id="dsq-author-user-56902">replyMOnkey</SPAN>             </CITE>         
  </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-56902">
  <DIV class="dsq-comment-message" id="dsq-comment-message-56902">
  <P>sopier: It’s because the request is missing the “Host” header. HTTP/1.1 
  requires you to send “Host: ” in the second line, i.e. “GET / 
  HTTP/1.1\r\nHost: <A href="http://www.google.com/" target="_blank" rel="nofollow">http://www.google.com/</A>\r\n\r\n”</P></DIV></DIV>
  <UL class="children">
    <LI class="comment byuser comment-author-admin bypostauthor odd alt depth-2" 
    id="dsq-comment-56910">
    <DIV class="dsq-comment-header" id="dsq-comment-header-56910"><CITE id="dsq-cite-56910"><SPAN 
    id="dsq-author-user-56910">Silver Moon</SPAN>             </CITE>         
    </DIV>
    <DIV class="dsq-comment-body" id="dsq-comment-body-56910">
    <DIV class="dsq-comment-message" id="dsq-comment-message-56910">
    <P>Its to keep things simple in the beginning.</P></DIV></DIV></LI></UL></LI>
  <LI class="comment even thread-odd thread-alt depth-1" id="dsq-comment-45420">
  <DIV class="dsq-comment-header" id="dsq-comment-header-45420"><CITE id="dsq-cite-45420">
  http://pythoncentral.org/                <SPAN 
  id="dsq-author-user-45420">Amanda Simmons</SPAN>             </CITE>         
  </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-45420">
  <DIV class="dsq-comment-message" id="dsq-comment-message-45420">
  <P>Very useful tips, well explained for beginner as well as intermediate level 
  Python Programmers.<BR>For more such tips and tutorials, please visit Python 
  Central, a strong opensource community for Python 
  enthusiast.</P></DIV></DIV></LI>
  <LI class="comment odd alt thread-even depth-1" id="dsq-comment-44990">
  <DIV class="dsq-comment-header" id="dsq-comment-header-44990"><CITE id="dsq-cite-44990"><SPAN 
  id="dsq-author-user-44990">sasogeek</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-44990">
  <DIV class="dsq-comment-message" id="dsq-comment-message-44990">
  <P>Thank you very much for this tutorial, I love python and want to use it to 
  build a real time web application but I’m not sure where to start, I was told 
  to start with socket programming and I’ve found this the most useful tutorial 
  after over a month of search for a good tutorial, thanks again! I’ll be sure 
  to recommend this :)</P>
  <P>That said though, I want to ask, in my quest to build a real time web app, 
  what should be my next step?</P></DIV></DIV>
  <UL class="children">
    <LI class="comment even depth-2" id="dsq-comment-45066">
    <DIV class="dsq-comment-header" id="dsq-comment-header-45066"><CITE id="dsq-cite-45066"><SPAN 
    id="dsq-author-user-45066">sasogeek</SPAN>             </CITE>         
</DIV>
    <DIV class="dsq-comment-body" id="dsq-comment-body-45066">
    <DIV class="dsq-comment-message" id="dsq-comment-message-45066">
    <P>The last code has some glitch on windows… when a client types a message, 
    it immediately followed by ‘Ok…%message’ %(message)s.<BR>so for example if i 
    want to type “hello”, the very moment i type “h”, it is followed by “Ok…h” 
    and I’m not allowed to type the whole phrase and hit enter first… how do i 
    fix this?</P></DIV></DIV></LI>
    <LI class="comment byuser comment-author-admin bypostauthor odd alt depth-2" 
    id="dsq-comment-45297">
    <DIV class="dsq-comment-header" id="dsq-comment-header-45297"><CITE id="dsq-cite-45297"><SPAN 
    id="dsq-author-user-45297">Silver Moon</SPAN>             </CITE>         
    </DIV>
    <DIV class="dsq-comment-body" id="dsq-comment-body-45297">
    <DIV class="dsq-comment-message" id="dsq-comment-message-45297">
    <P>what kind of realtime application are you trying to build ?<BR>If you 
    want to make a web application then you probably dont need sockets.<BR>web 
    applications work inside the browser so you need to use ajax and server side 
    scripting.</P></DIV></DIV>
    <UL class="children">
      <LI class="comment even depth-3" id="dsq-comment-45489">
      <DIV class="dsq-comment-header" id="dsq-comment-header-45489"><CITE id="dsq-cite-45489"><SPAN 
      id="dsq-author-user-45489">sasogeek</SPAN>             </CITE>         
      </DIV>
      <DIV class="dsq-comment-body" id="dsq-comment-body-45489">
      <DIV class="dsq-comment-message" id="dsq-comment-message-45489">
      <P>yes a real time web application is what I want to build, but wouldn’t I 
      need sockets to be able to understand the Twisted framework which I heard 
      Orbited is built upon and in combination with django I could build a real 
      time web app? I’m still new to all this :/</P></DIV></DIV>
      <UL class="children">
        <LI class="comment byuser comment-author-admin bypostauthor odd alt depth-4" 
        id="dsq-comment-46069">
        <DIV class="dsq-comment-header" id="dsq-comment-header-46069"><CITE id="dsq-cite-46069"><SPAN 
        id="dsq-author-user-46069">Silver Moon</SPAN>             </CITE>        
         </DIV>
        <DIV class="dsq-comment-body" id="dsq-comment-body-46069">
        <DIV class="dsq-comment-message" id="dsq-comment-message-46069">
        <P>Twisted framework is a library that can be used to build 
        socket/client applications like servers and clients quickly.<BR>So yes, 
        having knowledge of basic socket programming and protocols is necessary 
        to work with it.</P>
        <P>Apart from that you can also look into the websockets api of html5 
        that allows browsers to make realtime socket like<BR>communication from 
        javascript.</P></DIV></DIV></LI></UL></LI></UL></LI></UL></LI>
  <LI class="comment even thread-odd thread-alt depth-1" id="dsq-comment-34361">
  <DIV class="dsq-comment-header" id="dsq-comment-header-34361"><CITE id="dsq-cite-34361"><SPAN 
  id="dsq-author-user-34361">sopier</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-34361">
  <DIV class="dsq-comment-message" id="dsq-comment-message-34361">
  <P>I’m using HTTP/1.1 and the result is bad request, I switch to 1.0 and it 
  doin fine.. Also some of your code still contain semicolon on the end of the 
  line like (host = ‘www.google.com’; port = 80;) I thought Python doesn’t need 
  that :) Anyway still good reading.. Thanks..</P></DIV></DIV></LI>
  <LI class="comment odd alt thread-even depth-1" id="dsq-comment-34338">
  <DIV class="dsq-comment-header" id="dsq-comment-header-34338"><CITE id="dsq-cite-34338">
  http://www.banquise.org/                <SPAN id="dsq-author-user-34338">Luc 
  Stepniewski</SPAN>             </CITE>         </DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-34338">
  <DIV class="dsq-comment-message" id="dsq-comment-message-34338">
  <P>About the error message, that’s because, when you are using TCP, you may be 
  in a state where the algorithm waits for all the sockets to close (TIME_WAIT 
  state). It may take up to 2 minutes, which is really bothersome, especially 
  when you debug/develop.<BR>To suppress the waiting and allow the socket port 
  to be reused at once (instead of changing the port in your code), just add 
  this setting just before your bind sentence:</P>
  <P>  setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 
1)</P></DIV></DIV></LI>
  <LI class="comment even thread-odd thread-alt depth-1" id="dsq-comment-34334">
  <DIV class="dsq-comment-header" id="dsq-comment-header-34334"><CITE id="dsq-cite-34334"><SPAN 
  id="dsq-author-user-34334">Esakki Raj</SPAN>             </CITE>         
</DIV>
  <DIV class="dsq-comment-body" id="dsq-comment-body-34334">
  <DIV class="dsq-comment-message" id="dsq-comment-message-34334">
  <P>Very Usefull..Thanx a ton for the 
tutorial…:)</P></DIV></DIV></LI></UL></DIV></DIV>
<SCRIPT type="text/javascript">
/* <![CDATA[ */
    var disqus_url = 'http://www.binarytides.com/python-socket-programming-tutorial/';
    var disqus_identifier = '2204 http://www.binarytides.com/blog/?p=2204';
    var disqus_container_id = 'disqus_thread';
    var disqus_domain = 'disqus.com';
    var disqus_shortname = 'binarytides';
    var disqus_title = "Python socket programming tutorial";
        var disqus_config = function () {
        var config = this; // Access to the config object
        config.language = '';

        /*
           All currently supported events:
            * preData — fires just before we request for initial data
            * preInit - fires after we get initial data but before we load any dependencies
            * onInit  - fires when all dependencies are resolved but before dtpl template is rendered
            * afterRender - fires when template is rendered but before we show it
            * onReady - everything is done
         */

        config.callbacks.preData.push(function() {
            // clear out the container (its filled for SEO/legacy purposes)
            document.getElementById(disqus_container_id).innerHTML = '';
        });
                config.callbacks.onReady.push(function() {
            // sync comments in the background so we don't block the page
            var script = document.createElement('script');
            script.async = true;
            script.src = '?cf_action=sync_comments&post_id=2204';

            var firstScript = document.getElementsByTagName( "script" )[0];
            firstScript.parentNode.insertBefore(script, firstScript);
        });
                    };
/* ]]> */
</SCRIPT>
 
<SCRIPT type="text/javascript">
/* <![CDATA[ */
    var DsqLocal = {
        'trackbacks': [
        ],
        'trackback_url': "http:\/\/www.binarytides.com\/python-socket-programming-tutorial\/trackback\/"    };
/* ]]> */
</SCRIPT>
 
<SCRIPT type="text/javascript">
/* <![CDATA[ */
(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript';
    dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.' + 'disqus.com' + '/embed.js?pname=wordpress&pver=2.74';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
/* ]]> */
</SCRIPT>
			 </DIV></DIV></DIV></DIV><!-- End #colLeft --> <!-- Begin #colRight -->		 
<DIV id="colRight">
<DIV class="rightBox">
<DIV class="rightBoxMidSearch adsense_search">
<FORM id="cse-search-box" action="http://www.binarytides.com/search">
<DIV><INPUT name="cx" type="hidden" value="partner-pub-5814774904969415:4586881861"> 
    <INPUT name="cof" type="hidden" value="FORID:10">     <INPUT name="ie" type="hidden" 
value="UTF-8">     <INPUT name="q" type="text" size="55">     
<INPUT name="sa" type="submit" value="Search">   </DIV></FORM>
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/brand.js" type="text/javascript"></SCRIPT>
	 </DIV></DIV>
<DIV class="rightBox">
<DIV class="rightBoxMid">
<DIV class="textwidget">
<SCRIPT type="text/javascript"><!--
google_ad_client = "ca-pub-5814774904969415";
/* binarytides sidebar link unit */
google_ad_slot = "2728687863";
google_ad_width = 200;
google_ad_height = 90;
//-->
</SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/show_ads.js" type="text/javascript"></SCRIPT>
</DIV></DIV></DIV>
<DIV class="rightBox">
<DIV class="rightBoxMid">
<H2>Follow us on Twitter</H2>
<DIV class="textwidget"><A class="twitter-follow-button" href="https://twitter.com/binarytides" 
data-width="220px" data-align="right">Follow @binarytides</A></DIV></DIV></DIV>
<DIV class="rightBox">
<DIV class="rightBoxMid">
<H2>Related Posts</H2>
<UL>
  <LI class="SPOSTARBUST-Related-Post"><A title="Python program to fetch domain whois data using sockets" 
  href="http://www.binarytides.com/python-program-to-fetch-domain-whois-data-using-sockets/" 
  rel="bookmark">Python program to fetch domain whois data using 
sockets</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Programming udp sockets in python" 
  href="http://www.binarytides.com/programming-udp-sockets-in-python/" rel="bookmark">Programming 
  udp sockets in python</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Raw socket programming in python (Linux)" 
  href="http://www.binarytides.com/raw-socket-programming-in-python-linux/" rel="bookmark">Raw 
  socket programming in python (Linux)</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Syn flood program in python using raw sockets (Linux)" 
  href="http://www.binarytides.com/python-syn-flood-program-raw-sockets-linux/" 
  rel="bookmark">Syn flood program in python using raw sockets (Linux)</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Code a packet sniffer in python with pcapy extension" 
  href="http://www.binarytides.com/code-a-packet-sniffer-in-python-with-pcapy-extension/" 
  rel="bookmark">Code a packet sniffer in python with pcapy extension</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Receive full data with the recv socket function in python" 
  href="http://www.binarytides.com/receive-full-data-with-the-recv-socket-function-in-python/" 
  rel="bookmark">Receive full data with the recv socket function in 
  python</A></LI>
  <LI class="SPOSTARBUST-Related-Post"><A title="Code a network packet sniffer in python for Linux" 
  href="http://www.binarytides.com/python-packet-sniffer-code-linux/" rel="bookmark">Code 
  a network packet sniffer in python for Linux</A></LI></UL></DIV></DIV>
<DIV class="rightBox">
<DIV class="rightBoxMid">
<DIV class="textwidget">
<DIV class="fb-like-box" data-show-faces="true" data-width="250" data-header="true" 
data-stream="false" data-href="http://www.facebook.com/pages/Binary-Tides/285409488147791"></DIV></DIV></DIV></DIV></DIV><!-- End #colRight -->
	 </DIV><!-- end content -->		 </DIV><!-- end wrapper -->	 <!-- begin footer -->
		 
<DIV id="copyright">
<DIV id="copyrightInner">			Copyright Binarytides 2007-2011 | <A href="http://www.binarytides.com/about">About</A>
				 </DIV></DIV><!-- end footer --> 
<SCRIPT type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-2702686-20']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</SCRIPT>
	
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/shCore.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/shBrushPython.js" type="text/javascript"></SCRIPT>
 
<SCRIPT type="text/javascript">
	(function(){
		var corecss = document.createElement('link');
		var themecss = document.createElement('link');
		var corecssurl = "http://www.binarytides.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter2/styles/shCore.css?ver=2.1.364";
		if ( corecss.setAttribute ) {
				corecss.setAttribute( "rel", "stylesheet" );
				corecss.setAttribute( "type", "text/css" );
				corecss.setAttribute( "href", corecssurl );
		} else {
				corecss.rel = "stylesheet";
				corecss.href = corecssurl;
		}
		document.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );
		var themecssurl = "http://www.binarytides.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter2/styles/shThemeDefault.css?ver=2.1.364";
		if ( themecss.setAttribute ) {
				themecss.setAttribute( "rel", "stylesheet" );
				themecss.setAttribute( "type", "text/css" );
				themecss.setAttribute( "href", themecssurl );
		} else {
				themecss.rel = "stylesheet";
				themecss.href = themecssurl;
		}
		//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);
		document.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );
	})();
	SyntaxHighlighter.config.clipboardSwf = 'http://www.binarytides.com/blog/wp-content/plugins/syntaxhighlighter/syntaxhighlighter2/scripts/clipboard.swf';
	SyntaxHighlighter.config.strings.expandSource = 'show source';
	SyntaxHighlighter.config.strings.viewSource = 'view source';
	SyntaxHighlighter.config.strings.copyToClipboard = 'copy to clipboard';
	SyntaxHighlighter.config.strings.copyToClipboardConfirmation = 'The code is in your clipboard now';
	SyntaxHighlighter.config.strings.print = 'print';
	SyntaxHighlighter.config.strings.help = '?';
	SyntaxHighlighter.config.strings.alert = 'SyntaxHighlighter\n\n';
	SyntaxHighlighter.config.strings.noBrush = 'Can\'t find brush for: ';
	SyntaxHighlighter.config.strings.brushNotHtmlScript = 'Brush wasn\'t configured for html-script option: ';
	SyntaxHighlighter.defaults['pad-line-numbers'] = false;
	SyntaxHighlighter.all();
</SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/jquery-1.4.2.min.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/jquery.form.js" type="text/javascript"></SCRIPT>
 
<SCRIPT src="Python%20socket%20programming%20tutorial%20%20Binary%20Tides_files/ddsmoothmenu.js" type="text/javascript"></SCRIPT>
 <!-- drop down top menu init --> 
<SCRIPT type="text/javascript">
ddsmoothmenu.init({
	mainmenuid: "topMenu", //menu DIV id
	orientation: 'h', //Horizontal or vertical menu: Set to "h" or "v"
	classname: 'ddsmoothmenu', //class added to menu's outer DIV
	//customtheme: ["#1c5a80", "#18374a"],
	contentsource: "markup" //"markup" or ["container_id", "path_to_menu_file"]
})

</SCRIPT>
 
<SCRIPT type="text/javascript">
 
$(function () 
{
  var msie6 = $.browser == 'msie' && $.browser.version < 7;
 
  if (!msie6) 
{
var elem = $('#right_gad').closest('.rightBox');
    var top = elem.offset().top - parseFloat(elem.css('margin-top').replace(/auto/, 0));
 
	$(window).scroll(function (event) 
{

// what the y position of the scroll is
      var y = $(this).scrollTop();
 
      if (y >= top) {
        // if so, ad the fixed class
        elem.addClass('fixed');
      } else {
        // otherwise remove it
        elem.removeClass('fixed');
      }
    });
  }  
});
 
</SCRIPT>
 <!-- for facebook like button --> 
<DIV id="fb-root"></DIV>
<SCRIPT type="text/javascript">(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</SCRIPT>
 <!-- for twitter button --> 
<SCRIPT type="text/javascript">!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");</SCRIPT>
 <!-- google plus button --> 
<SCRIPT type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</SCRIPT>
 <!-- BuySellAds Ad Code --> 
<SCRIPT type="text/javascript">
(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = 'http://s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();
</SCRIPT>
 <!-- End BuySellAds Ad Code --> </BODY></HTML><!-- This Quick Cache file was built for (  www.binarytides.com/python-socket-programming-tutorial/ ) in 1.43125 seconds, on Mar 5th, 2013 at 12:54 am UTC. --><!-- This Quick Cache file will automatically expire ( and be re-built automatically ) on Mar 5th, 2013 at 10:54 am UTC --><!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ --><!-- Quick Cache Is Fully Functional :-) ... A Quick Cache file was just served for (  www.binarytides.com/python-socket-programming-tutorial/ ) in 0.00078 seconds, on Mar 5th, 2013 at 10:21 am UTC. -->
